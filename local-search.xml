<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>加拿大学签(study permit)相关政策</title>
    <link href="/2023/12/17/%E5%8A%A0%E6%8B%BF%E5%A4%A7%E7%95%99%E5%AD%A6%E6%94%BF%E7%AD%96/"/>
    <url>/2023/12/17/%E5%8A%A0%E6%8B%BF%E5%A4%A7%E7%95%99%E5%AD%A6%E6%94%BF%E7%AD%96/</url>
    
    <content type="html"><![CDATA[<p><ahref="https://www.canada.ca/en/immigration-refugees-citizenship/services/study-canada.html">本文翻译总结自这里</a></p><ul><li>申请到 <strong>study permit</strong>(大签) 之后, 他们会<strong>automatically</strong> 基于你的护照, 发一个visitor visa 或electronic travel authorizaiton(eTA), 俗称小签</li><li>中国护照是需要visa的</li><li>签发(issue)的工作/学习许可(permit) 和 visitor record不会超过你的护照期限, 需要重视, 及时办理延期</li><li>学习许可(study permit)让你可以在 designated learning institutions(DLIs) 指定的学习机构学习</li><li>所以<strong>申请study permit是重点</strong></li></ul><h2 id="获得study-permit的方式">获得study permit的方式</h2><h3 id="student-direct-stream快速">Student Direct Stream(快速)</h3><ul><li><p>写于Dec 17, 2023</p></li><li><p><strong>150刀</strong>, 尽可能20天内出study permits</p></li><li><p>如果你满足条件,你可以为你的配偶/伴侣/小孩同时申请(同时一次性帮他们提交资料!) ####申请前提</p></li><li><p>住在中国的中国公民可以申请</p></li><li><p>申请时不住在Canada</p></li><li><p>有<strong><em>DLIs的录取通知书</em></strong>(acceptanceletter)</p></li><li><p>证明你已经交了<strong>第一年的学费</strong>(学校发票或证明等)</p></li><li><p>拥有<strong>1万加元</strong>的担保投资证书(Guaranteed InvestmentCertificate, GIC)</p><ul><li>即, 1万加元先付给指定银行(如中国银行加拿大分行), 到加拿大之后,马上返你一部分, 剩余的12个月内返还</li></ul></li><li><p>你最近毕业的学校<strong>成绩单</strong></p></li><li><p>一项<strong><em>语言考试</em></strong>证明(两年以内, 需要亲自,线下考试)</p><ul><li><strong>托福至少83分</strong>/general雅思,听说读写都至少6分/学术雅思总分6分</li><li>还有一些其他选择</li></ul></li><li><p>当你准备学习护理行业或满足某些条件时,你需要在申请前做一个<strong>体检</strong></p></li><li><p>如果你要去<strong>魁北克(Quebec)</strong>, 你要有额外的QuebecAcceptance Certificate (CAQ)</p></li><li><p>依据你申请的项目, 你可能需要一个<strong>(未)犯罪记录证明</strong> (police certificate)</p></li><li><p>有时会被要求提供其他额外的文件资料,这种情况下审核会更久一些</p></li><li><p>如果你不满足条件, 你就要去<ahref="https://www.canada.ca/en/immigration-refugees-citizenship/services/study-canada/study-permit/apply.html">常规申请流程regular study permit application process</a>.</p></li><li><p>同样150刀, 9 weeks+</p></li></ul><h4 id="how-to-apply">How to apply</h4><ul><li>全线上申请</li><li><ahref="https://www.canada.ca/en/immigration-refugees-citizenship/services/application/application-forms-guides/guide-5269-applying-study-permit-outside-canada.html">这是详细的官方申请指南,包含申请需要的文件和申请中的问题</a></li><li>你需要扫描你的资料</li><li>你需要有可以支付的信用卡/储蓄卡</li><li>如果之前没提供过,一般是要提供<strong>生物识别信息</strong>(biometrics)的, 如指纹/照片,申请的时候先付费, 会收到一封信, 信上会说怎么做</li></ul><h4 id="after-apply">After apply</h4><ul><li>需要提供生物特征</li><li>如果通过/批准了, 会发放<ahref="http://www.cic.gc.ca/english/helpcentre/answer.asp?qnum=845&amp;top=25">aport of entry letter of introduction</a>, 到达加拿大的时候要用</li><li>如果你需要eTA, 会自动连接到你到护照; 如果你要visa, 会要求你提交护照,然后贴到你的护照上</li><li>到达入境口岸后, 有官员检查你的资料, 确认无误后给你发放studypermits</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>resources</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>留学资源</title>
    <link href="/2023/12/17/%E7%95%99%E5%AD%A6%E8%B5%84%E6%BA%90/"/>
    <url>/2023/12/17/%E7%95%99%E5%AD%A6%E8%B5%84%E6%BA%90/</url>
    
    <content type="html"><![CDATA[<h2 id="dec-17-2023">Dec 17, 2023</h2><p><ahref="https://youtu.be/6nAwbMPyvvc?si=9rjhCbg4Vd-z-LpY">此视频在23年6月份估算了加拿大留学两年的消费额</a>,两年共26万人民币, 学期内每周兼职20小时, 暑假一周兼职30小时(按底薪算)</p><p><ahref="https://www.bilibili.com/video/BV15P411o7nu/?share_source=copy_web&amp;vd_source=7d11eec85d770dbca9fa5ca1dc3e936a">选择加拿大硕士前一定要了解的几件事,23年4月, up是加拿大cs硕士</a></p><ul><li>难申, 学校排名低, 顶尖学校少(非常难), 如果为了排名不推荐来</li><li>硕士费用: 美国100+w, 加拿大cs硕士加打工30w普通生活够了,澳洲英国也都更贵60+</li><li>气候, 冬天很长, 穿了大衣不算冷</li><li>移民<ul><li>相对英美非常简单. 美国读完研究生, 抽/排工签, 再绿卡, 至少7年</li><li>加拿大2年硕士, 工作一年再申请绿卡, 一共4年,基本有工作一定可以移民</li></ul></li><li>就业<ul><li>现在已经不是随便找工作了, 加拿大本地工作经验非常重要,语言沟通专业技能, 雅思6.5远远不够, 听力8+比较好, 不主动的话口语进步缓慢,口语7+比较好, 找工作雅思7+至少</li><li>简历和语言非常重要, 主要就是简历关, 没有学历歧视,注重工作经历和内推</li></ul></li><li>娱乐<ul><li>沃泰华(首都)小村子, 大城市只有多伦多和温哥华, 蒙特利尔</li><li>没有桌游, 密逃, 网吧</li><li>他们更多从事室外运动, 冰球滑雪攀岩, 室内健身氛围很好</li></ul></li><li>食物<ul><li>温哥华, 多伦多: 华人多, 应有尽有</li><li>沃泰华, 兰州拉面, 烤鸭(非常贵), 炒菜馆啥的, 但相对不多,比国内差一些, 小吃基本吃不到, 臭豆腐, 烧麦都没有</li><li>做饭都自己学的, 只买肉的话费用还可以</li></ul></li><li>人文<ul><li>比较友好</li><li>种族歧视, up的8个月里没有过, 除了流浪汉</li></ul></li><li>安全, 控枪, 流浪汉比较多</li></ul><p>适合: 拿绿卡的人! 比较无聊的人</p><p>不适合: 追求学历的人, 想挣大钱的人!</p><p><ahref="https://www.bilibili.com/video/BV17s4y1J71U/?spm_id_from=333.999.0.0&amp;vd_source=40645413612f159eb5e31f3c39bc5f84">加拿大CS硕士对比美英申请难度+全面陈述个人三维简历背景,同上up主</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>resources</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>fluid主题渲染markdown的测试</title>
    <link href="/2023/07/13/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/"/>
    <url>/2023/07/13/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="chapter1">Chapter1</h2><div class="note note-warning">            <p>Warning 文字 或者 <code>markdown</code> 均可 <em>你在说什么</em></p>          </div><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs md">&#123;% note warning %&#125;<br>Warning<br>文字 或者 <span class="hljs-code">`markdown`</span> 均可<br><span class="hljs-emphasis">*你在说什么*</span><br>&#123;% endnote %&#125;<br></code></pre></td></tr></table></figure><h2 id="chapter2">Chapter2</h2><span class="label label-primary">小标签</span><span class="label label-primary">小标签2</span><span class="label label-primary">小标签3</span><p>比用行内代码写的<code>小标签</code>要好看一些</p><p>小标签是用如下的代码展现的 <code>&#123;% label primary @小标签 %&#125;</code></p><p>上面这个单行的代码展示可以直接使用``来实现, 即行内代码</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">这是使用```blabla```行间代码展示的<br></code></pre></td></tr></table></figure><p><em>这是斜体</em></p><p><strong>这是粗体</strong></p><p><strong><em>这是粗斜体</em></strong></p><p><del>不是</del></p><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs node-repl"><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">[!note] <span class="hljs-title class_">Title</span></span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript"><span class="hljs-title class_">Contents</span></span><br><br>==这理应是一个高亮, 但是无法实现==<br><br>这两个语法是渲染不出来的, 如下<br></code></pre></td></tr></table></figure><blockquote><p>[!note] Title Contents</p></blockquote><p>==这在ob是一个高亮, 但是这里的渲染器无法实现==</p><div class="note note-warning">            <p>文字 或者 <code>markdown</code> 均可</p><p>alaskdjlkasdjf</p>          </div><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name">note</span> warning %&#125;</span><span class="language-xml"></span><br><span class="language-xml">文字 或者 `markdown` 均可</span><br><span class="language-xml"></span><br><span class="language-xml">alaskdjlkasdjf</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name">endnote</span> %&#125;</span><br></code></pre></td></tr></table></figure><span class="label label-warning">高亮能不能用fluid的标签语法实现呢, 效果还是可以的, 不能换行</span><p>代码如下</p><p><code>&#123;% label warning @高亮能不能用fluid的标签语法实现呢 %&#125;</code></p><blockquote><p>一级引用</p><blockquote><p>二级引用</p><blockquote><p>三级引用</p></blockquote><p>退回二级引用</p></blockquote></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">一级引用</span><br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash"></span><br><span class="language-bash">&gt;&gt; 二级引用</span><br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt;</span><br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; 三级引用</span><br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt;</span><br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt; 退回二级引用</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python">Wheel command line tool (enable python -m wheel syntax)<br><br><span class="hljs-keyword">import</span> sys<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():  <span class="hljs-comment"># needed for console script</span><br>    <span class="hljs-keyword">if</span> __package__ == <span class="hljs-string">&#x27;&#x27;</span>:<br>        <span class="hljs-comment"># To be able to run &#x27;python wheel-0.9.whl/wheel&#x27;:</span><br>        <span class="hljs-keyword">import</span> os.path<br>        path = os.path.dirname(os.path.dirname(__file__))<br>        sys.path[<span class="hljs-number">0</span>:<span class="hljs-number">0</span>] = [path]<br>    <span class="hljs-keyword">import</span> wheel.cli<br>    sys.exit(wheel.cli.main())<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    sys.exit(main())<br></code></pre></td></tr></table></figure><p><span class="math display">\[E=mc^2\]</span></p><p>inline formula <span class="math inline">\(x+y=z\)</span> inlineformula</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><br><span class="hljs-comment"># filepath is where the wav recordings store</span><br><br><span class="hljs-comment"># filepath = &#x27;offline-test-data-1-mono&#x27;</span><br><span class="hljs-comment"># filepath = &#x27;offline-test-data-2-stereo-to-mono&#x27;</span><br>filepath = <span class="hljs-string">&quot;offline-test-data-3-stereo&quot;</span><br><span class="hljs-comment"># outpath1 is where the rttm files store</span><br>outpath1 = <span class="hljs-string">&quot;&#123;filepath&#125;/rttm/&quot;</span>.<span class="hljs-built_in">format</span>(filepath=filepath)<br><span class="hljs-comment"># outpath2 is where the sad files store</span><br>outpath2 = <span class="hljs-string">&quot;&#123;filepath&#125;/sad/&quot;</span>.<span class="hljs-built_in">format</span>(filepath=filepath)<br><br><span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.exists(outpath1):<br>    os.mkdir(outpath1)<br><br><span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.exists(outpath2):<br>    os.mkdir(outpath2)<br><br><span class="hljs-comment"># filepath/textgrid is where the textgrid files of recordings store</span><br>files = os.listdir(<span class="hljs-string">&quot;&#123;filepath&#125;/textgrid/&quot;</span>.<span class="hljs-built_in">format</span>(filepath=filepath))<br><br><span class="hljs-comment"># for each textgrid file, extract the speech segments and write them into rttm files</span><br><span class="hljs-keyword">for</span> file <span class="hljs-keyword">in</span> files:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;--------------------&quot;</span>)<br>    filename = file.split(<span class="hljs-string">&quot;.&quot;</span>)[<span class="hljs-number">0</span>]<br>    <span class="hljs-built_in">print</span>(filename)<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<br>        <span class="hljs-string">&quot;&#123;filepath&#125;/textgrid/&#123;file&#125;&quot;</span>.<span class="hljs-built_in">format</span>(filepath=filepath, file=file), <span class="hljs-string">&quot;r&quot;</span><br>    ) <span class="hljs-keyword">as</span> f:<br>        out = []<br>        lines = f.readlines()<br>        lines = [line[:-<span class="hljs-number">1</span>] <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> lines]<br>        <span class="hljs-keyword">for</span> i, line <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(lines):<br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(line) &gt; <span class="hljs-number">2</span> <span class="hljs-keyword">and</span> <span class="hljs-built_in">len</span>(line) &lt; <span class="hljs-number">10</span> <span class="hljs-keyword">and</span> line[<span class="hljs-number">0</span>] == <span class="hljs-string">&#x27;&quot;&#x27;</span>:<br>                <span class="hljs-keyword">if</span> line[-<span class="hljs-number">1</span>] == <span class="hljs-string">&#x27;&quot;&#x27;</span> <span class="hljs-keyword">and</span> <span class="hljs-keyword">not</span> (<br>                    line == <span class="hljs-string">&#x27;&quot;6&quot;&#x27;</span><br>                    <span class="hljs-keyword">or</span> line == <span class="hljs-string">&#x27;&quot;1&quot;&#x27;</span><br>                    <span class="hljs-keyword">or</span> line == <span class="hljs-string">&#x27;&quot;2&quot;&#x27;</span><br>                    <span class="hljs-keyword">or</span> line == <span class="hljs-string">&#x27;&quot;TextGrid&quot;&#x27;</span><br>                    <span class="hljs-keyword">or</span> line == <span class="hljs-string">&#x27;&quot;IntervalTier&quot;&#x27;</span><br>                    <span class="hljs-keyword">or</span> line == <span class="hljs-string">&#x27;&quot;全局层&quot;&#x27;</span><br>                    <span class="hljs-keyword">or</span> line == <span class="hljs-string">&#x27;&quot;文本层&quot;&#x27;</span><br>                    <span class="hljs-keyword">or</span> line == <span class="hljs-string">&#x27;&quot;角色层&quot;&#x27;</span><br>                    <span class="hljs-keyword">or</span> line == <span class="hljs-string">&#x27;&quot;[ENS]&quot;&#x27;</span><br>                    <span class="hljs-keyword">or</span> line == <span class="hljs-string">&#x27;&quot;[SIL]&quot;&#x27;</span><br>                ):<br>                    <span class="hljs-comment"># if line[1] == &quot;[&quot; or line == &quot;\&quot;+\&quot;&quot;:</span><br>                    <span class="hljs-keyword">if</span> line == <span class="hljs-string">&#x27;&quot;+&quot;&#x27;</span>:<br>                        s = lines[i - <span class="hljs-number">2</span>]<br>                        <span class="hljs-built_in">print</span>(s)<br>                        e = lines[i - <span class="hljs-number">1</span>]<br>                        <span class="hljs-built_in">print</span>(e)<br>                        duration = <span class="hljs-built_in">round</span>((<span class="hljs-built_in">float</span>(e) - <span class="hljs-built_in">float</span>(s)), <span class="hljs-number">3</span>)<br>                        <span class="hljs-built_in">print</span>(duration)<br>                        <span class="hljs-built_in">print</span>(line)<br>                        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot; &quot;</span>)<br>                        outputline1 = <span class="hljs-string">&quot;SPEAKER &#123;filename&#125;_B1 &#123;s&#125; &#123;duration&#125; &lt;NA&gt; &lt;NA&gt; &#123;filename&#125;&#123;speaker&#125; &lt;NA&gt; &lt;NA&gt;\n&quot;</span>.<span class="hljs-built_in">format</span>(<br>                            filename=filename, s=s, duration=duration, speaker=<span class="hljs-string">&quot;+&quot;</span><br>                        )<br>                        <span class="hljs-comment"># print(outputline1)</span><br>                        outputline2 = <span class="hljs-string">&quot;&#123;s&#125; &#123;e&#125; speech\n&quot;</span>.<span class="hljs-built_in">format</span>(s=s, e=e)<br>                        <span class="hljs-comment"># print(outputline2)</span><br>                        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<br>                            <span class="hljs-string">&quot;&#123;filepath&#125;/rttm_AB_new/&#123;filename&#125;_B.rttm&quot;</span>.<span class="hljs-built_in">format</span>(<br>                                filepath=filepath, filename=filename<br>                            ),<br>                            <span class="hljs-string">&quot;a&quot;</span>,<br>                        ) <span class="hljs-keyword">as</span> f:<br>                            f.write(outputline1)<br>                        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<br>                            <span class="hljs-string">&quot;&#123;filepath&#125;/sad_AB_new/&#123;filename&#125;_A.lab&quot;</span>.<span class="hljs-built_in">format</span>(<br>                                filepath=filepath, filename=filename<br>                            ),<br>                            <span class="hljs-string">&quot;a&quot;</span>,<br>                        ) <span class="hljs-keyword">as</span> f:<br>                            f.write(outputline2)<br></code></pre></td></tr></table></figure><h2 id="references">references</h2><p><a href="https://www.bilibili.com">b站链接</a></p><figure><img src="/img/wallpaper.jpg" title="这是点击图片打开后的title"alt="插入一张图片, 这是图片下方文字" /><figcaption aria-hidden="true">插入一张图片,这是图片下方文字</figcaption></figure><figure><img src="/img/test.png" title="看看边框效果怎样"alt="插入一张黑色图片" /><figcaption aria-hidden="true">插入一张黑色图片</figcaption></figure><figure><imgsrc="https://raw.githubusercontent.com/yizhenAllen/BlogImg/main/animegirls.jpg"title="这是图片的title" alt="用github做一个图床, 然后引用" /><figcaption aria-hidden="true">用github做一个图床, 然后引用</figcaption></figure><figure><img src="/img/dog_logo.png" title="这是tab页的logo捏"alt="插入一个icon, 亮色主题下会有阴影边框" /><figcaption aria-hidden="true">插入一个icon,亮色主题下会有阴影边框</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>Test</category>
      
      <category>Sondir</category>
      
      <category>Test1</category>
      
    </categories>
    
    
    <tags>
      
      <tag>test</tag>
      
    </tags>
    
  </entry>
  
  
  
  
  
  
  <entry>
    <title>about</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<p>欢迎大家加我一起讨论!</p>]]></content>
    
  </entry>
  
  
  
</search>
